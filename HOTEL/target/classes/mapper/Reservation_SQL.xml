<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reservation">

	<select id="selectResult" parameterType="hashmap" resultType="hashmap">
		SELECT
		A.RES_ID, A.CAR_ID, TO_CHAR(A.RES_CHK_SDAY, 'YYYY-MM-DD') RES_CHK_SDAY, A.RES_ANOTHER,
        TO_CHAR(A.RES_CHK_EDAY, 'YYYY-MM-DD') RES_CHK_EDAY, A.RES_ADULT, A.RES_CHILD, A.RES_NO,
		TO_CHAR(A.RES_PRICE, '999,999,999') RES_PRICE, B.MEM_NAME, B.MEM_EMAIL,
		REGEXP_REPLACE(B.MEM_PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') MEM_PHONE,
		(SELECT ROOM_NAME
		 FROM ROOM
		 WHERE ROOM_ID = (SELECT ROOM_ID FROM RESERVATION WHERE RES_ID=#{RES_ID})) ROOM_NAME
		FROM RESERVATION A,
		    (SELECT MEM_NAME, MEM_PHONE, MEM_EMAIL, MEM_ID FROM MEMBER) B
		WHERE RES_ID=#{RES_ID}
		AND A.MEM_ID = B.MEM_ID
	</select>

	<select id="selectResId" parameterType="hashmap" resultType="int">
		SELECT SEQ_RES_ID.NEXTVAL FROM DUAL
	</select>
	<select id="selectCarId" parameterType="hashmap" resultType="int">
		SELECT SEQ_CAR_ID.NEXTVAL FROM DUAL
	</select>

	<insert id="insertReservation" parameterType="hashmap">
	INSERT INTO RESERVATION
		(RES_ID, ROOM_ID, MEM_ID, CAR_ID, RES_ADULT, RES_CHILD, RES_ANOTHER, RES_CHK_SDAY, RES_CHK_EDAY, RES_DATE, RES_NO, RES_PRICE)
	VALUES
		(#{RES_ID}, #{ROOM_ID}, (SELECT MEM_ID FROM MEMBER WHERE MEM_USERID=#{MEM_USERID}),
		#{CAR_ID}, #{adult}, #{child}, #{RES_ANOTHER}, TO_DATE(#{fromdate},'YYYY-MM-DD'),
		TO_DATE(#{todate},'YYYY-MM-DD'), sysdate,
		TO_NUMBER(CONCAT(#{RES_ID}, TO_CHAR(sysdate, 'HHMISS'))), #{ROOM_PRICE})
	</insert>

	<insert id="insertCard" parameterType="hashmap">
	INSERT INTO CARD
		(CAR_ID, RES_ID, CAR_PAYEDDATE, CAR_COMPANY, CAR_NUMBER, CAR_NAME, CAR_VALIDITYPERIOD, CAR_CVCNUM, CAR_AMOUNT)
	VALUES
		(#{CAR_ID}, #{RES_ID}, sysdate, #{CAR_COMPANY}, #{CAR_NUMBER}, 
	#{CAR_NAME}, TO_DATE(#{CAR_VALIDITYPERIOD},'YYYY-MM'), #{CAR_CVCNUM}, #{ROOM_PRICE})
	</insert>
	
	<select id="selectRooms" resultType="hashmap">
		<![CDATA[
SELECT
		    A.ROOM_ID, A.ROOM_NAME, A.CNT, TO_CHAR((TO_NUMBER((TO_DATE(sysdate+1) - TO_DATE(sysdate)) )*A.ROOM_PRICE),'999,999,999') ROOM_PRICE, B.ROOM_IMGS_FILE, A.ROOM_TYPE,
		    A.ROOM_ADULT, A.ROOM_CHILD, A.ROOM_CONTENT, A.ROOM_SIZE, A.ROOM_BEDTYPE,
		    TO_CHAR(((TO_NUMBER((TO_DATE(sysdate+1) - TO_DATE(sysdate)))*A.ROOM_PRICE)-A.DC),'999,999,999') DC
		FROM
			(SELECT
		        A.ROOM_ID, A.ROOM_TYPE, A.ROOM_NAME, A.ROOM_ADULT, A.ROOM_CHILD, A.ROOM_CONTENT, A.ROOM_SIZE, A.ROOM_BEDTYPE, A.ROOM_DATE, A.ROOM_PRICE, B.CNT, C.DC
			 FROM ROOM A,
		        (SELECT MIN(ROOM_ID) ROOM_ID, COUNT(ROOM_ID) CNT
				 FROM ROOM
				 WHERE ROOM_ID NOT IN
					(SELECT ROOM_ID
					 FROM RESERVATION
					 WHERE RES_CHK_SDAY <= sysdate AND RES_CHK_EDAY > sysdate)
				  GROUP BY ROOM_NAME ORDER BY ROOM_ID ASC) B,
		        (SELECT SUM(DECODE(D,1,20000,2,10000,3,10000,4,10000,5,10000,6,0,7,0)) DC
				 FROM (SELECT TO_CHAR(sysdate, 'D') D FROM DUAL)) C
			 WHERE A.ROOM_ID = B.ROOM_ID
			 AND A.ROOM_ID IN
				(SELECT MIN(ROOM_ID) ROOM_ID
				 FROM ROOM
				 WHERE ROOM_ID NOT IN
					(SELECT ROOM_ID
					 FROM RESERVATION
					 WHERE  RES_CHK_SDAY <= sysdate AND RES_CHK_EDAY > sysdate)
		         AND ROOM_ADULT >= 1
		         AND ROOM_CHILD >= 0
		         AND TO_CHAR(ROOM_DATE, 'YYYY-MM-DD') <= sysdate
				 GROUP BY ROOM_NAME)
			 ORDER BY A.ROOM_ID ASC) A,
				(SELECT ROOM_IMGS_ID, ROOM_ID, ROOM_IMGS_FILE
				 FROM ROOM_IMAGES
				 WHERE ROOM_IMGS_ID IN
		            (SELECT MIN(ROOM_IMGS_ID) ROOM_IMGS_ID FROM ROOM_IMAGES GROUP BY ROOM_ID)) B
		WHERE A.ROOM_ID = b.room_id(+)
		]]>
	</select>
	
	<select id="selectSearchByRooms" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
	         A.ROOM_ID, A.ROOM_NAME, A.CNT, B.ROOM_IMGS_FILE,
	         TO_CHAR((TO_NUMBER((TO_DATE(#{todate}) - TO_DATE(#{fromdate})) )*A.ROOM_PRICE),'999,999,999') ROOM_PRICE, A.ROOM_TYPE,
	         A.ROOM_ADULT, A.ROOM_CHILD, A.ROOM_CONTENT, A.ROOM_SIZE, A.ROOM_BEDTYPE,
	         TO_CHAR(((TO_NUMBER((TO_DATE(#{todate}) - TO_DATE(#{fromdate})))*A.ROOM_PRICE)-A.DC),'999,999,999') DC
	      FROM
	          (SELECT A.ROOM_ID, A.ROOM_TYPE, A.ROOM_NAME, A.ROOM_PRICE, A.ROOM_ADULT, A.ROOM_CHILD,
	          		  A.ROOM_CONTENT, A.ROOM_SIZE, A.ROOM_BEDTYPE, B.CNT, C.DC
	           FROM ROOM A, 
	              (SELECT MIN(ROOM_ID) ROOM_ID, COUNT(ROOM_ID) CNT
	               FROM ROOM 
	               WHERE ROOM_ID NOT IN
	                  (SELECT ROOM_ID
	                   FROM 
	                      (SELECT RES_ID, ROOM_ID, MEM_ID, RES_ADULT, RES_CHILD, RES_ANOTHER, CAR_ID, RES_CHK_SDAY, RES_CHK_EDAY, RES_DATE, RES_NO, RES_PRICE
	                       FROM RESERVATION
	                       WHERE TO_CHAR(RES_CHK_EDAY, 'YYYY-MM-DD') > #{fromdate})
	                   WHERE  TO_CHAR(RES_CHK_SDAY, 'YYYY-MM-DD') < #{todate})
	               AND ROOM_ADULT >= #{adult}
	               AND ROOM_CHILD >= #{child}
	               AND TO_CHAR(ROOM_DATE, 'YYYY-MM-DD') <= sysdate
	               GROUP BY ROOM_TYPE) B,
	               (SELECT SUM(DECODE(IN_DATE,1,20000,2,10000,3,10000,4,10000,5,10000,6,0,7,0)) DC
	                    FROM
	                    (
	                    SELECT IN_DATE
	                    FROM (
	                        SELECT TO_CHAR(TO_DATE(#{fromdate}, 'YYYY-MM-DD') + LEVEL - 1, 'D') AS IN_DATE
	                        FROM DUAL CONNECT BY LEVEL <= TO_DATE(#{todate}, 'YYYY-MM-DD') -1 - TO_DATE(#{fromdate}, 'YYYY-MM-DD') + 1)
	                    ))C
	          WHERE A.ROOM_ID = B.ROOM_ID
	          AND   A.ROOM_ID IN
	              (SELECT MIN(ROOM_ID) ROOM_ID FROM   ROOM WHERE  ROOM_ID NOT IN
	                  (SELECT ROOM_ID
	                   FROM 
	                      (SELECT RES_ID, ROOM_ID, MEM_ID, RES_ADULT, RES_CHILD, RES_ANOTHER, CAR_ID, RES_CHK_SDAY, RES_CHK_EDAY, RES_DATE, RES_NO, RES_PRICE
	                       FROM RESERVATION
	                       WHERE TO_CHAR(RES_CHK_EDAY, 'YYYY-MM-DD') > #{fromdate})
	                   WHERE  TO_CHAR(RES_CHK_SDAY, 'YYYY-MM-DD') < #{todate})
	               AND ROOM_ADULT >= #{adult}
	               AND ROOM_CHILD >= #{child}
	               AND TO_CHAR(ROOM_DATE, 'YYYY-MM-DD') <= sysdate
	               GROUP BY ROOM_TYPE)
	          ORDER BY ROOM_TYPE) A,
	          (SELECT ROOM_IMGS_ID, ROOM_TYPE, ROOM_IMGS_FILE
	          FROM ROOM_IMAGES
	          WHERE ROOM_IMGS_ID IN
	              (SELECT MIN(ROOM_IMGS_ID) ROOM_IMGS_ID FROM ROOM_IMAGES GROUP BY ROOM_TYPE)) B
	      WHERE A.ROOM_TYPE = B.ROOM_TYPE(+)
		]]>
	</select>

	<delete id="deleteReservation" parameterType="hashmap">
		DELETE RESERVATION
		WHERE RES_ID = #{RES_ID}
	</delete>
	
	<delete id="deleteCard" parameterType="hashmap">
		DELETE CARD
		WHERE CAR_ID = #{CAR_ID}
	</delete>
	
	<select id="selectRoomView" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT A.ROOM_ID, A.ROOM_TYPE, A.ROOM_NAME, A.ROOM_SIZE, A.ROOM_BEDTYPE, A.ROOM_CONTENT, B.ROOM_IMGS_FILE
		FROM ROOM A,
		    (SELECT ROOM_IMGS_ID, ROOM_TYPE, ROOM_IMGS_FILE FROM ROOM_IMAGES WHERE ROOM_IMGS_ID IN
		        (SELECT MIN(ROOM_IMGS_ID)ROOM_IMGS_ID FROM ROOM_IMAGES WHERE ROOM_TYPE IN
		            (SELECT MIN(ROOM_TYPE) ROOM_TYPE FROM ROOM WHERE ROOM_DATE <= sysdate GROUP BY ROOM_TYPE)
		        GROUP BY ROOM_TYPE)
		    )B
		WHERE A.ROOM_TYPE = B.ROOM_TYPE(+)
		AND ROOM_ID IN
		    (SELECT MIN(ROOM_ID) ROOM_ID FROM ROOM WHERE ROOM_DATE <= sysdate GROUP BY ROOM_TYPE)
		ORDER BY ROOM_TYPE
		]]>
	</select>
	
	<select id="selectUserResList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
	<![CDATA[
	SELECT
        ROW_NUMBER() OVER (ORDER BY RES_CHK_SDAY DESC, RES_CHK_EDAY ASC, RES_DATE ASC, RES_NO ASC) RNUM, 
		A.ROOM_ID, A.RES_NO,
		TO_CHAR(A.RES_DATE, 'YY/MM/DD') RES_DATE, A.ROOM_NAME, A.RES_ADULT, A.RES_CHILD,
		TO_CHAR(A.RES_CHK_SDAY, 'YY/MM/DD') RES_CHK_SDAY, TO_CHAR(A.RES_CHK_EDAY, 'YY/MM/DD') RES_CHK_EDAY,
		TO_CHAR(A.RES_PRICE, 'L999,999,999') RES_PRICE, NVL(A.RES_ANOTHER,' ') RES_ANOTHER,
		A.RES_ID, A.CAR_ID
	FROM 
		(SELECT
		A.ROOM_ID, RES_NO, RES_DATE, ROOM_NAME, RES_ADULT, RES_CHILD, RES_CHK_SDAY, RES_CHK_EDAY, RES_PRICE,
		SUBSTR(NVL(A.RES_ANOTHER,' '),1,10) RES_ANOTHER,
		RES_ID, CAR_ID
		FROM RESERVATION A, ROOM B
		WHERE MEM_ID = (SELECT MEM_ID FROM MEMBER WHERE MEM_USERID = #{MEM_USERID})
		AND A.ROOM_ID = B.ROOM_ID
		ORDER BY RES_DATE, RES_CHK_SDAY, RES_CHK_EDAY) A,
		CARD B
	WHERE A.CAR_ID = B.CAR_ID(+)
	]]>
	<choose>
		<when test="searchOption == 'RES_NO'">
			AND RES_NO LIKE '%${keyword}%'
		</when>
		<when test="searchOption == 'CAR_NAME'">
			AND CAR_NAME LIKE '%${keyword}%'
		</when>
		<when test="searchOption == 'RES_CHK_SDAY'">
			AND TO_CHAR(RES_CHK_SDAY, 'YYYY-MM-DD') = TO_CHAR('${keyword}','YYYY-MM-DD')
		</when>
		<when test="searchOption == 'RES_CHK_EDAY'">
			AND TO_CHAR(RES_CHK_EDAY, 'YYYY-MM-DD') = TO_CHAR('${keyword}','YYYY-MM-DD')
		</when>
		<otherwise>
		</otherwise>
	</choose>
		<include refid="common.pagingPost"/>
	</select>
	
	<!-- 카카오 결제의 경우 CAR_ID 를 0으로 고정 -->
	<insert id="kakaoInsertReservation" parameterType="hashmap">
	INSERT INTO RESERVATION
		(RES_ID, ROOM_ID, MEM_ID, CAR_ID, RES_ADULT, RES_CHILD, RES_ANOTHER, RES_CHK_SDAY, RES_CHK_EDAY, RES_DATE, RES_NO, RES_PRICE)
	VALUES
		(#{RES_ID}, #{ROOM_ID}, (SELECT MEM_ID FROM MEMBER WHERE MEM_USERID=#{MEM_USERID}),
		'0', #{adult}, #{child}, #{RES_ANOTHER}, TO_DATE(#{fromdate},'YYYY-MM-DD'),
		TO_DATE(#{todate},'YYYY-MM-DD'), sysdate,
		TO_NUMBER(CONCAT(#{RES_ID}, TO_CHAR(sysdate, 'HHMISS'))), #{ROOM_PRICE})
	</insert>
	
	<select id="kakaoSelectResult" parameterType="hashmap" resultType="hashmap">
	SELECT
		A.RES_ID, A.CAR_ID, TO_CHAR(A.RES_CHK_SDAY, 'YYYY-MM-DD') RES_CHK_SDAY, A.RES_ANOTHER,
        TO_CHAR(A.RES_CHK_EDAY, 'YYYY-MM-DD') RES_CHK_EDAY, A.RES_ADULT, A.RES_CHILD, A.RES_NO,
		TO_CHAR(A.RES_PRICE, '999,999,999') RES_PRICE, B.MEM_NAME, B.MEM_EMAIL,
		REGEXP_REPLACE(B.MEM_PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') MEM_PHONE,
		(SELECT ROOM_NAME
	 FROM ROOM
		 WHERE ROOM_ID = (SELECT ROOM_ID FROM RESERVATION WHERE RES_ID=#{RES_ID})) ROOM_NAME
		FROM RESERVATION A,
	    (SELECT MEM_NAME, MEM_PHONE, MEM_EMAIL, MEM_ID FROM MEMBER) B
	WHERE RES_ID=#{RES_ID}
	AND A.MEM_ID = B.MEM_ID
	</select>
	
</mapper>